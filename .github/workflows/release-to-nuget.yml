name: Release to NuGet

on:
  release:
    types: [published]
  workflow_dispatch:  # Allow manual trigger

jobs:
  build:
    runs-on: windows-latest  # Changed to Windows for MSBuild compatibility
    timeout-minutes: 5

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x  # Ensure using .NET 6.0.x version

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1.3.1  # Add MSBuild setup for build and pack tasks

    - name: Restore dependencies
      run: dotnet restore  # Restore dependencies before building

    - name: Build
      run: dotnet build -c Release --no-restore  # Build the project without restoring dependencies again

    - name: Test
      run: dotnet test -c Release --no-build --verbosity normal  # Run tests without rebuilding

    - name: Clean old .nupkg files
      run: rm -rf ./nupkgs/*.nupkg  # Remove any existing .nupkg files

    - name: Pack NuGet Packages
      run: |
        dotnet pack -c Release --no-build --output ./nupkgs  # Pack NuGet packages
        echo "Listing files in ./nupkgs/"
        ls -la ./nupkgs  # List the contents of the nupkgs directory to check for .nupkg files

    - name: List contents of the working directory
      run: |
        echo "Listing contents of the working directory:"
        ls -la  # List all files and directories in the current directory

    - name: Push to NuGet
      run: |
        echo "Listing files in ./nupkgs/ before pushing"
        ls -la ./nupkgs  # Double check the files before pushing
        dotnet nuget push "./nupkgs/*.nupkg" --api-key ${{ secrets.nuget_api_key }} --source https://api.nuget.org/v3/index.json --skip-duplicate
